# Sample cloudbuild.yaml that can containerize a Java app with JFrog Artifactory as a source of truth.
# NOTE: JFrog cloud builder image should exist. cloudbuild.yaml to build JFrog cloud builder image exists one level up.

# In this directory, run the following command to build this builder.
# $ gcloud builds submit . --config=cloudbuild.yaml

substitutions:
  _JFROG_SERVER_NAME: partnership-clouddays.jfrog.io
  _JFROG_USER: <company-name>@jfrog.com
  _JFROG_API_KEY: <api-key>
  _JFROG_REPO_NAME: clouddays

steps:


- name: 'gcr.io/$PROJECT_ID/java/jfrog:1.17.1'
  args: ['rt', 'c', '${_JFROG_REPO_NAME}', '--url=https://${_JFROG_SERVER_NAME}/artifactory', '--user=${_JFROG_USER}', '--apikey=${_JFROG_API_KEY}']
  env: ['TMPDIR=/workspace']

  # Configure npm repo
- name: 'gcr.io/$PROJECT_ID/java/jfrog:1.17.1'
  args: ['rt', 'npmc', '--repo-resolve=npm', '--repo-deploy=npm','--server-id-resolve=${_JFROG_REPO_NAME}','--server-id-deploy=${_JFROG_REPO_NAME}']
  env: ['TMPDIR=/workspace']

# Build a sample npm project
- name: 'gcr.io/$PROJECT_ID/java/jfrog:1.17.1'
  args: ['rt', 'npm-install', '--build-name=npm_build', '--build-number=1']
  env: ['TMPDIR=/workspace']

  # Build a sample npm project
- name: 'gcr.io/$PROJECT_ID/java/jfrog:1.17.1'
  args: ['rt', 'npm-publish', '--build-name=npm_build', '--build-number=1']
  env: ['TMPDIR=/workspace']

  # Build a sample npm project
- name: 'gcr.io/$PROJECT_ID/java/jfrog:1.17.1'
  args: ['rt', 'build-publish', 'npm_build', '1']
  env: ['TMPDIR=/workspace']

# Containerize npm app
- name: 'gcr.io/cloud-builders/docker'
  args:
  - 'build'
  - '--tag=${_JFROG_SERVER_NAME}/npm-app:latest'
  - '.'

- name: 'gcr.io/$PROJECT_ID/java/jfrog:1.17.1'
  args: ['rt', 'docker-push', '${_JFROG_SERVER_NAME}/npm-app:latest','${_JFROG_REPO_NAME}','--build-name=npm_build', '--build-number=1']
  env: ['TMPDIR=/workspace']

images:
- '${_JFROG_SERVER_NAME}/npm-app:latest'
tags: ['cloud-builders-community']
